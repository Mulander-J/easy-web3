import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useCallback, useState } from 'react'
import { useConnectWallet } from '@web3-onboard/react'
import { ethers } from 'ethers'

// solidity + hardhat
// etherjs + react + next + web3Board

const buttonStyles = {
  borderRadius: '6px',
  background: '#111827',
  border: 'none',
  fontSize: '18px',
  fontWeight: '600',
  cursor: 'pointer',
  color: 'white',
  padding: '14px 12px',
  marginTop: '40px',
  fontFamily: 'inherit'
}

export default function Home() {
  const [ theName, setName ] = useState('')
  const changeName = (e: any) => { setName(e?.target?.value || '') }

  const [{ wallet, connecting }, connect, disconnect] = useConnectWallet()

  // create an ethers provider
  let ethersProvider: any

  if (wallet) {
    ethersProvider = new ethers.providers.Web3Provider(wallet.provider, 'any')
  }
  
  const registerName = useCallback(async () => {
    if(!theName) {
      alert('Please enter name!')
      return
    }

    const signer = ethersProvider.getSigner()
    const theContract = new ethers.Contract(
      "0x1E70Bdb52F0DA6671Fa21A4573B2C0892c183c42", 
      [{
        "inputs": [{
          "internalType": "string",
          "name": "name",
          "type": "string"
        }],
        "name": "register",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },{
        "inputs": [{
          "internalType": "string",
          "name": "",
          "type": "string"
        }],
        "name": "domains",
        "outputs": [{
          "internalType": "address",
          "name": "",
          "type": "address"
        }],
        "stateMutability": "view",
        "type": "function"
      },{
        "inputs": [{
          "internalType": "string",
          "name": "name",
          "type": "string"
        }],
        "name": "price",
        "outputs": [{
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }],
        "stateMutability": "pure",
        "type": "function"
      }],
      signer
    )

    const isExist = await theContract.domains(theName)
    if(Number(isExist)>0) {
      alert('This dns has been taken.')
      return
    }

    const price = await theContract.price(theName)
    console.log(`Price: ${price/1e18}`)

    const tx = await theContract.register(theName, {value: price})
    console.log(`tx-hash:${tx.hash}`)

    await tx.wait()
    console.log('Success!')
  }, [ethersProvider, theName])

  const renderMain = ()=>{
    if (!wallet) {
      return (
        <button
          style={buttonStyles}
          disabled={connecting}
          onClick={() => (wallet ? disconnect(wallet) : connect())}
        >
          {connecting ? 'Connecting' : 'Connect'}
        </button>
      )
    } else {
      return (
        <section>
          <div>
            <input value={theName||''} onChange={changeName} />
          </div>
          <button style={buttonStyles} onClick={registerName}>Register</button>
        </section>
      )
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to this demo of PNS
        </h1>

        {renderMain()}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
